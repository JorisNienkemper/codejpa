<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd"
             version="2.2">
    <persistence-unit name="jpa-hiber-postgres-pu-one-to-one" transaction-type="RESOURCE_LOCAL">
        <description>Hibernate Tips</description>
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <class>com.infosupport.demo30startwithrelations.app.domain.onetoone.PublisherOneToOne</class>
        <class>com.infosupport.demo30startwithrelations.app.domain.onetoone.PublisherInfoOneToOne</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>

        <properties>
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgresPlusDialect"/>
            <!--            <property name="hibernate.generate_statistics" value="true"/>-->
            <!--          Avoid next property as it prints to the console, use logging instead!-->
            <!--            <property name="hibernate.show_sql" value="true"/>-->

            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <!--    Uncomment next two statements and we have the standard JBDC driver used by JPA/Hibernate -->
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5432/${db.name}"/>
            <property name="javax.persistence.jdbc.user" value="cursist"/>
            <property name="javax.persistence.jdbc.password" value="${db.password}"/>

            <!-- Try to intercept calls to jdbc with Connecting URL Way:
                 see: https://p6spy.readthedocs.io/en/latest/integration.html#log-file
             -->

            <!-- These 2 statements enable the use of the p6spy used as a logger. Comment them out when you prefer the usage  -->
            <!--            <property name="javax.persistence.jdbc.driver" value=" com.p6spy.engine.spy.P6SpyDriver"/>-->
            <!--            <property name="javax.persistence.jdbc.url" value="jdbc:p6spy:postgresql://localhost:5432/cursistdb"/>-->
            <property name="javax.persistence.schema-generation.database.action"
                      value="drop-and-create"/>
            <!--            <property name="hibernate.connection.url" value="jdbc:postgresql://localhost:5432/cursistdb"/>-->
            <property name="hibernate.connection.driver_class" value="org.postgresql.Driver"/>
            <property name="javax.persistence.sql-load-script-source"
                      value="data.sql"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="jpa-hiber-postgres-pu-one-to-many-many-to-one" transaction-type="RESOURCE_LOCAL">
        <description>Hibernate Tips</description>
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <class>com.infosupport.demo10startwithjpa.app.domain.onetomany.manytoone.EmployeeManyToOne</class>
        <class>com.infosupport.demo10startwithjpa.app.domain.onetomany.manytoone.PublisherOneToMany</class>
        <class>com.infosupport.demo10startwithjpa.app.domain.onetomany.manytoone.PublisherOneToManyCascadeRemove</class>
        <class>com.infosupport.demo10startwithjpa.app.domain.onetomany.manytoone.EmployeeManyToOneCascadeRemove</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>

        <properties>
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgresPlusDialect"/>
            <property name="hibernate.generate_statistics" value="true"/>
            <!--          Avoid next property as it prints to the console, use logging instead!-->
            <!--            <property name="hibernate.show_sql" value="true"/>-->

            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <!--    Uncomment next two statements and we have the standard JBDC driver used by JPA/Hibernate -->
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5432/${db.name}"/>
            <property name="javax.persistence.jdbc.user" value="cursist"/>
            <property name="javax.persistence.jdbc.password" value="${db.password}"/>

            <!-- Try to intercept calls to jdbc with Connecting URL Way:
                 see: https://p6spy.readthedocs.io/en/latest/integration.html#log-file
             -->

            <!-- These 2 statements enable the use of the p6spy used as a logger. Comment them out when you prefer the usage  -->
            <!--            <property name="javax.persistence.jdbc.driver" value=" com.p6spy.engine.spy.P6SpyDriver"/>-->
            <!--            <property name="javax.persistence.jdbc.url" value="jdbc:p6spy:postgresql://localhost:5432/cursistdb"/>-->

            <property name="javax.persistence.schema-generation.database.action"
                      value="drop-and-create"/>
            <!--            <property name="hibernate.connection.url" value="jdbc:postgresql://localhost:5432/cursistdb"/>-->
            <property name="hibernate.connection.driver_class" value="org.postgresql.Driver"/>
            <property name="javax.persistence.sql-load-script-source"
                      value="data.sql"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="jpa-hiber-postgres-pu-readonly" transaction-type="RESOURCE_LOCAL">
        <description>Hibernate Tips</description>
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        <properties>
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgresPlusDialect"/>
            <property name="hibernate.generate_statistics" value="true"/>
            <!--          Avoid next property as it prints to the console, use logging instead!-->
            <!--            <property name="hibernate.show_sql" value="true"/>-->

            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <!--    Uncomment next two statements and we have the standard JBDC driver used by JPA/Hibernate -->
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5432/cursistdb"/>


            <!-- Try to intercept calls to jdbc with Connecting URL Way:
                 see: https://p6spy.readthedocs.io/en/latest/integration.html#log-file
             -->

            <!-- These 2 statements enable the use of the p6spy used as a logger. Comment them out when you prefer the usage  -->
            <!--            <property name="javax.persistence.jdbc.driver" value=" com.p6spy.engine.spy.P6SpyDriver"/>-->
            <!--            <property name="javax.persistence.jdbc.url" value="jdbc:p6spy:postgresql://localhost:5432/cursistdb"/>-->

            <property name="javax.persistence.jdbc.user" value="cursist"/>
            <property name="javax.persistence.jdbc.password" value="${db.password}"/>

            <property name="javax.persistence.schema-generation.database.action"
                      value="drop-and-create"/>
            <!--            <property name="hibernate.connection.url" value="jdbc:postgresql://localhost:5432/cursistdb"/>-->
            <property name="hibernate.connection.driver_class" value="org.postgresql.Driver"/>
            <property name="javax.persistence.sql-load-script-source"
                      value="data.sql"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="many-to-many-unidirectional" transaction-type="RESOURCE_LOCAL">
        <description>Hibernate Tips</description>
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <class>com.infosupport.demo30startwithrelations.app.domain.manytomany.unidirectional.Author</class>
        <class>com.infosupport.demo30startwithrelations.app.domain.manytomany.unidirectional.TitleWithList</class>
        <class>com.infosupport.demo30startwithrelations.app.domain.manytomany.unidirectional.TitleWithSet</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        <properties>
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgresPlusDialect"/>
            <property name="hibernate.generate_statistics" value="true"/>
            <!--          Avoid next property as it prints to the console, use logging instead!-->
            <!--            <property name="hibernate.show_sql" value="true"/>-->

            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <!--    Uncomment next two statements and we have the standard JBDC driver used by JPA/Hibernate -->
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5432/${db.name}"/>


            <!-- Try to intercept calls to jdbc with Connecting URL Way:
                 see: https://p6spy.readthedocs.io/en/latest/integration.html#log-file
             -->

            <!-- These 2 statements enable the use of the p6spy used as a logger. Comment them out when you prefer the usage  -->
            <!--            <property name="javax.persistence.jdbc.driver" value=" com.p6spy.engine.spy.P6SpyDriver"/>-->
            <!--            <property name="javax.persistence.jdbc.url" value="jdbc:p6spy:postgresql://localhost:5432/cursistdb"/>-->

            <property name="javax.persistence.jdbc.user" value="cursist"/>
            <property name="javax.persistence.jdbc.password" value="${db.password}"/>

            <property name="javax.persistence.schema-generation.database.action"
                      value="drop-and-create"/>
            <!--            <property name="hibernate.connection.url" value="jdbc:postgresql://localhost:5432/cursistdb"/>-->
            <property name="hibernate.connection.driver_class" value="org.postgresql.Driver"/>
            <property name="javax.persistence.sql-load-script-source"
                      value="data.sql"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="many-to-many-bidirectional" transaction-type="RESOURCE_LOCAL">
        <description>Hibernate Tips</description>
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <class>com.infosupport.demo30startwithrelations.app.domain.manytomany.bidirectional.Author</class>
        <class>com.infosupport.demo30startwithrelations.app.domain.manytomany.bidirectional.Title</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        <properties>
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgresPlusDialect"/>
            <property name="hibernate.generate_statistics" value="true"/>
            <!--          Avoid next property as it prints to the console, use logging instead!-->
            <!--            <property name="hibernate.show_sql" value="true"/>-->

            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <!--    Uncomment next two statements and we have the standard JBDC driver used by JPA/Hibernate -->
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5432/${db.name}"/>


            <!-- Try to intercept calls to jdbc with Connecting URL Way:
                 see: https://p6spy.readthedocs.io/en/latest/integration.html#log-file
             -->

            <!-- These 2 statements enable the use of the p6spy used as a logger. Comment them out when you prefer the usage  -->
            <!--            <property name="javax.persistence.jdbc.driver" value=" com.p6spy.engine.spy.P6SpyDriver"/>-->
            <!--            <property name="javax.persistence.jdbc.url" value="jdbc:p6spy:postgresql://localhost:5432/cursistdb"/>-->

            <property name="javax.persistence.jdbc.user" value="cursist"/>
            <property name="javax.persistence.jdbc.password" value="${db.password}"/>

            <property name="javax.persistence.schema-generation.database.action"
                      value="drop-and-create"/>
            <!--            <property name="hibernate.connection.url" value="jdbc:postgresql://localhost:5432/cursistdb"/>-->
            <property name="hibernate.connection.driver_class" value="org.postgresql.Driver"/>
            <property name="javax.persistence.sql-load-script-source"
                      value="data.sql"/>
        </properties>
    </persistence-unit>
</persistence>
